{"version":3,"file":"static/js/584.cd1d680d.chunk.js","mappings":"0KAGA,MAAMA,EAAQC,IAAkB,IAAjB,QAAEC,GAASD,EACxB,MAAOE,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAUC,IAAeJ,EAAAA,EAAAA,UAAS,KAClCK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,KAC5BO,EAASC,IAAcR,EAAAA,EAAAA,WAAS,GAEjCS,GAAeC,EAAAA,EAAAA,cAAYC,UAC/BC,EAAEC,iBACFP,EAAS,IACTE,GAAW,GAEX,IACE,IAAKP,IAAaE,EAChB,MAAM,IAAIW,MAAM,qDAGlB,MAAMC,EAAWjB,EAAU,aAAe,gBACpCkB,QAAiBC,EAAAA,EAAMC,KAAKH,EAAU,CAAEd,WAAUE,aAExDN,EAAQ,CACNsB,GAAIH,EAASI,KAAKC,QAClBpB,YAGJ,CAAE,MAAOI,GAAQ,IAADiB,EAAAC,EACd,IAAIC,GAA6B,QAAdF,EAAAjB,EAAMW,gBAAQ,IAAAM,GAAM,QAANC,EAAdD,EAAgBF,YAAI,IAAAG,OAAN,EAAdA,EAAsBlB,QAASA,EAAMoB,SAAW,0BACnEnB,EAASkB,GAGT,MAAME,EAAYC,SAASC,cAAc,cACzCF,EAAUG,UAAUC,IAAI,SACxBC,YAAW,KACTL,EAAUG,UAAUG,OAAO,QAAQ,GAClC,IAEL,CAAC,QACCxB,GAAW,EACb,IACC,CAACV,EAASG,EAAUE,EAAUN,IAEjC,OACEoC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,QAAOC,SAAC,6BAEtBF,EAAAA,EAAAA,MAAA,QAAMI,SAAU5B,EAAc6B,MAAO,CAAEC,MAAO,OAAQC,SAAU,SAAUL,SAAA,EACxEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SAAOK,QAAQ,WAAUN,SAAC,cAC1BC,EAAAA,EAAAA,KAAA,SACEM,KAAK,OACLvB,GAAG,WACHwB,MAAO1C,EACP2C,SAAWhC,GAAMV,EAAYU,EAAEiC,OAAOF,OACtCG,YAAY,6BACZC,SAAUxC,QAId0B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SAAOK,QAAQ,WAAUN,SAAC,cAC1BC,EAAAA,EAAAA,KAAA,SACEM,KAAK,WACLvB,GAAG,WACHwB,MAAOxC,EACPyC,SAAWhC,GAAMR,EAAYQ,EAAEiC,OAAOF,OACtCG,YAAY,+BACZC,SAAUxC,OAIbF,IAAS+B,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,SAAE9B,KAE1C+B,EAAAA,EAAAA,KAAA,UACEM,KAAK,SACLR,UAAU,SACVa,SAAUxC,EAAQ4B,SAEjBrC,EAAU,iBAAmB,wBAGhCsC,EAAAA,EAAAA,KAAA,UACEM,KAAK,SACLR,UAAU,gBACVc,QAASA,IAAMjD,GAAYD,GAC3BiD,SAAUxC,EAAQ4B,SAEjBrC,EAAU,4BAA8B,iCAGzC,EAIV,EAAemD,EAAAA,KAAWtD,E","sources":["components/Login.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Login = ({ onLogin }) => {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = useCallback(async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setLoading(true);\r\n\r\n    try {\r\n      if (!username || !password) {\r\n        throw new Error('Both username and password are required, asshole!');\r\n      }\r\n\r\n      const endpoint = isLogin ? '/api/login' : '/api/register';\r\n      const response = await axios.post(endpoint, { username, password });\r\n      \r\n      onLogin({\r\n        id: response.data.user_id,\r\n        username\r\n      });\r\n      \r\n    } catch (error) {\r\n      let errorMessage = error.response?.data?.error || error.message || 'Failed to authenticate!';\r\n      setError(errorMessage);\r\n      \r\n      // Shake effect on error\r\n      const container = document.querySelector('.container');\r\n      container.classList.add('shake');\r\n      setTimeout(() => {\r\n        container.classList.remove('shake');\r\n      }, 500);\r\n      \r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [isLogin, username, password, onLogin]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"title\">Tic Tac Toe Shitshow v1</h1>\r\n      \r\n      <form onSubmit={handleSubmit} style={{ width: '100%', maxWidth: '400px' }}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"username\">Username</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            placeholder=\"Enter your username, prick\"\r\n            disabled={loading}\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            placeholder=\"Enter your password, asshole\"\r\n            disabled={loading}\r\n          />\r\n        </div>\r\n        \r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        \r\n        <button \r\n          type=\"submit\" \r\n          className=\"button\"\r\n          disabled={loading}\r\n        >\r\n          {isLogin ? 'Login, Asshole' : 'Sign Up, You Prick'}\r\n        </button>\r\n        \r\n        <button \r\n          type=\"button\" \r\n          className=\"button purple\"\r\n          onClick={() => setIsLogin(!isLogin)}\r\n          disabled={loading}\r\n        >\r\n          {isLogin ? 'Need an account? Sign up!' : 'Have an account? Login!'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Login); "],"names":["Login","_ref","onLogin","isLogin","setIsLogin","useState","username","setUsername","password","setPassword","error","setError","loading","setLoading","handleSubmit","useCallback","async","e","preventDefault","Error","endpoint","response","axios","post","id","data","user_id","_error$response","_error$response$data","errorMessage","message","container","document","querySelector","classList","add","setTimeout","remove","_jsxs","className","children","_jsx","onSubmit","style","width","maxWidth","htmlFor","type","value","onChange","target","placeholder","disabled","onClick","React"],"sourceRoot":""}