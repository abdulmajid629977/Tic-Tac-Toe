{"ast":null,"code":"import React,{useState,useEffect,useCallback,useMemo}from'react';import{useNavigate}from'react-router-dom';import{io}from'socket.io-client';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AIGame=_ref=>{let{user,onLogout}=_ref;const navigate=useNavigate();const[socket,setSocket]=useState(null);const[gameState,setGameState]=useState(null);const[roomCode,setRoomCode]=useState(null);const[message,setMessage]=useState(\"Starting AI game...\");const[showGameOver,setShowGameOver]=useState(false);const[gameOverMessage,setGameOverMessage]=useState('');const[error,setError]=useState('');// Setup socket connection\nuseEffect(()=>{const newSocket=io();setSocket(newSocket);return()=>{newSocket.disconnect();};},[]);// Start AI game on connect\nuseEffect(()=>{if(!socket||!user)return;socket.on('connect',()=>{socket.emit('play_vs_ai');});socket.on('error',data=>{setError(data.message);// Auto navigate back after error\nsetTimeout(()=>{navigate('/home');},3000);});socket.on('ai_game_started',data=>{setGameState(data.game_state);setRoomCode(data.room_code);setMessage(data.message);});socket.on('move_made',data=>{setGameState(data.game_state);setMessage(\"AI is thinking...\");});socket.on('ai_move_made',data=>{setGameState(data.game_state);setMessage(\"Your move, asshole!\");// Add shake animation to status message\nconst statusElement=document.querySelector('.game-status');if(statusElement){statusElement.classList.add('shake');setTimeout(()=>{statusElement.classList.remove('shake');},500);}});socket.on('game_over',data=>{setGameState(data.game_state);setMessage(data.message);setGameOverMessage('Game\\'s over, you chaotic bastards! Thanks for the mess!');setShowGameOver(true);// Hide game over banner after 4 seconds\nsetTimeout(()=>{setShowGameOver(false);},4000);});socket.on('game_reset',data=>{setGameState(data.game_state);setMessage(\"Game reset! Your move, asshole!\");});return()=>{socket.off('connect');socket.off('error');socket.off('ai_game_started');socket.off('move_made');socket.off('ai_move_made');socket.off('game_over');socket.off('game_reset');};},[socket,user,navigate]);const handleCellClick=useCallback(index=>{if(!socket||!gameState||!roomCode)return;// Check if it's player's turn and cell is empty\nif(gameState.current_turn!=='X'||gameState.board[index]!==null||gameState.status!=='playing'){return;}socket.emit('make_move_vs_ai',{room_code:roomCode,cell_index:index});},[socket,gameState,roomCode]);const handleResetGame=useCallback(()=>{if(!socket||!roomCode)return;socket.emit('reset_game',{room_code:roomCode});},[socket,roomCode]);const handleBackToHome=useCallback(()=>{navigate('/home');},[navigate]);// Memoize the board to prevent unnecessary re-renders\nconst renderBoard=useMemo(()=>{if(!gameState)return null;return/*#__PURE__*/_jsx(\"div\",{className:\"game-board\",children:gameState.board.map((cell,index)=>/*#__PURE__*/_jsx(\"div\",{className:`cell ${cell?cell.toLowerCase():''}`,onClick:()=>handleCellClick(index),children:cell},index))});},[gameState,handleCellClick]);if(error){return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:\"Error\"}),/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:handleBackToHome,children:\"Back to Home\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[showGameOver&&/*#__PURE__*/_jsx(\"div\",{className:\"game-over-banner\",children:gameOverMessage}),/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:\"Playing vs. AI\"}),/*#__PURE__*/_jsx(\"div\",{className:\"game-status\",children:message}),renderBoard,/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'10px',marginTop:'20px'},children:[/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:handleResetGame,disabled:!gameState||gameState.status!=='winner'&&gameState.status!=='tie',children:\"Reset Game\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button purple\",onClick:handleBackToHome,children:\"Back to Home\"})]})]});};export default/*#__PURE__*/React.memo(AIGame);","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","useNavigate","io","jsx","_jsx","jsxs","_jsxs","AIGame","_ref","user","onLogout","navigate","socket","setSocket","gameState","setGameState","roomCode","setRoomCode","message","setMessage","showGameOver","setShowGameOver","gameOverMessage","setGameOverMessage","error","setError","newSocket","disconnect","on","emit","data","setTimeout","game_state","room_code","statusElement","document","querySelector","classList","add","remove","off","handleCellClick","index","current_turn","board","status","cell_index","handleResetGame","handleBackToHome","renderBoard","className","children","map","cell","toLowerCase","onClick","style","display","gap","marginTop","disabled","memo"],"sources":["C:/Users/Majid/Downloads/ticktac/client/src/components/AIGame.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { io } from 'socket.io-client';\r\n\r\nconst AIGame = ({ user, onLogout }) => {\r\n  const navigate = useNavigate();\r\n  \r\n  const [socket, setSocket] = useState(null);\r\n  const [gameState, setGameState] = useState(null);\r\n  const [roomCode, setRoomCode] = useState(null);\r\n  const [message, setMessage] = useState(\"Starting AI game...\");\r\n  const [showGameOver, setShowGameOver] = useState(false);\r\n  const [gameOverMessage, setGameOverMessage] = useState('');\r\n  const [error, setError] = useState('');\r\n  \r\n  // Setup socket connection\r\n  useEffect(() => {\r\n    const newSocket = io();\r\n    setSocket(newSocket);\r\n    \r\n    return () => {\r\n      newSocket.disconnect();\r\n    };\r\n  }, []);\r\n  \r\n  // Start AI game on connect\r\n  useEffect(() => {\r\n    if (!socket || !user) return;\r\n    \r\n    socket.on('connect', () => {\r\n      socket.emit('play_vs_ai');\r\n    });\r\n    \r\n    socket.on('error', (data) => {\r\n      setError(data.message);\r\n      \r\n      // Auto navigate back after error\r\n      setTimeout(() => {\r\n        navigate('/home');\r\n      }, 3000);\r\n    });\r\n    \r\n    socket.on('ai_game_started', (data) => {\r\n      setGameState(data.game_state);\r\n      setRoomCode(data.room_code);\r\n      setMessage(data.message);\r\n    });\r\n    \r\n    socket.on('move_made', (data) => {\r\n      setGameState(data.game_state);\r\n      setMessage(\"AI is thinking...\");\r\n    });\r\n    \r\n    socket.on('ai_move_made', (data) => {\r\n      setGameState(data.game_state);\r\n      setMessage(\"Your move, asshole!\");\r\n      \r\n      // Add shake animation to status message\r\n      const statusElement = document.querySelector('.game-status');\r\n      if (statusElement) {\r\n        statusElement.classList.add('shake');\r\n        setTimeout(() => {\r\n          statusElement.classList.remove('shake');\r\n        }, 500);\r\n      }\r\n    });\r\n    \r\n    socket.on('game_over', (data) => {\r\n      setGameState(data.game_state);\r\n      setMessage(data.message);\r\n      setGameOverMessage('Game\\'s over, you chaotic bastards! Thanks for the mess!');\r\n      setShowGameOver(true);\r\n      \r\n      // Hide game over banner after 4 seconds\r\n      setTimeout(() => {\r\n        setShowGameOver(false);\r\n      }, 4000);\r\n    });\r\n    \r\n    socket.on('game_reset', (data) => {\r\n      setGameState(data.game_state);\r\n      setMessage(\"Game reset! Your move, asshole!\");\r\n    });\r\n    \r\n    return () => {\r\n      socket.off('connect');\r\n      socket.off('error');\r\n      socket.off('ai_game_started');\r\n      socket.off('move_made');\r\n      socket.off('ai_move_made');\r\n      socket.off('game_over');\r\n      socket.off('game_reset');\r\n    };\r\n  }, [socket, user, navigate]);\r\n  \r\n  const handleCellClick = useCallback((index) => {\r\n    if (!socket || !gameState || !roomCode) return;\r\n    \r\n    // Check if it's player's turn and cell is empty\r\n    if (gameState.current_turn !== 'X' || gameState.board[index] !== null || gameState.status !== 'playing') {\r\n      return;\r\n    }\r\n    \r\n    socket.emit('make_move_vs_ai', {\r\n      room_code: roomCode,\r\n      cell_index: index\r\n    });\r\n  }, [socket, gameState, roomCode]);\r\n  \r\n  const handleResetGame = useCallback(() => {\r\n    if (!socket || !roomCode) return;\r\n    \r\n    socket.emit('reset_game', { room_code: roomCode });\r\n  }, [socket, roomCode]);\r\n  \r\n  const handleBackToHome = useCallback(() => {\r\n    navigate('/home');\r\n  }, [navigate]);\r\n  \r\n  // Memoize the board to prevent unnecessary re-renders\r\n  const renderBoard = useMemo(() => {\r\n    if (!gameState) return null;\r\n    \r\n    return (\r\n      <div className=\"game-board\">\r\n        {gameState.board.map((cell, index) => (\r\n          <div \r\n            key={index}\r\n            className={`cell ${cell ? cell.toLowerCase() : ''}`}\r\n            onClick={() => handleCellClick(index)}\r\n          >\r\n            {cell}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }, [gameState, handleCellClick]);\r\n  \r\n  if (error) {\r\n    return (\r\n      <div className=\"container\">\r\n        <h1 className=\"title\">Error</h1>\r\n        <div className=\"error-message\">{error}</div>\r\n        <button className=\"button\" onClick={handleBackToHome}>\r\n          Back to Home\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      {showGameOver && (\r\n        <div className=\"game-over-banner\">\r\n          {gameOverMessage}\r\n        </div>\r\n      )}\r\n      \r\n      <h1 className=\"title\">Playing vs. AI</h1>\r\n      \r\n      <div className=\"game-status\">\r\n        {message}\r\n      </div>\r\n      \r\n      {renderBoard}\r\n      \r\n      <div style={{ display: 'flex', gap: '10px', marginTop: '20px' }}>\r\n        <button \r\n          className=\"button\" \r\n          onClick={handleResetGame}\r\n          disabled={!gameState || (gameState.status !== 'winner' && gameState.status !== 'tie')}\r\n        >\r\n          Reset Game\r\n        </button>\r\n        \r\n        <button className=\"button purple\" onClick={handleBackToHome}>\r\n          Back to Home\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(AIGame); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}