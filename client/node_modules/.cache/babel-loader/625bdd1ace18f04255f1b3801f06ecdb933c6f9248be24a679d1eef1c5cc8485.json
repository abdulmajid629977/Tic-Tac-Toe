{"ast":null,"code":"import React,{useState,useEffect,useCallback,useMemo}from'react';import{useParams,useNavigate}from'react-router-dom';import{io}from'socket.io-client';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Game=_ref=>{let{user,onLogout}=_ref;const{roomCode}=useParams();const navigate=useNavigate();const[socket,setSocket]=useState(null);const[gameState,setGameState]=useState(null);const[playerSymbol,setPlayerSymbol]=useState(null);const[message,setMessage]=useState(\"Connecting to the chaos...\");const[showGameOver,setShowGameOver]=useState(false);const[gameOverMessage,setGameOverMessage]=useState('');const[error,setError]=useState('');// Setup socket connection\nuseEffect(()=>{const newSocket=io();setSocket(newSocket);return()=>{newSocket.disconnect();};},[]);// Handle socket events\nuseEffect(()=>{if(!socket||!user)return;socket.on('connect',()=>{socket.emit('join_room',{room_code:roomCode});});socket.on('error',data=>{setError(data.message);setMessage(\"Error joined the room\");// Auto navigate back after error\nsetTimeout(()=>{navigate('/home');},3000);});socket.on('room_joined',data=>{setGameState(data.game_state);setPlayerSymbol(data.player_symbol);setMessage(`You joined as ${data.player_symbol}. ${data.game_state.status==='waiting'?'Waiting for opponent...':`${data.game_state.current_turn}'s turn!`}`);});socket.on('player_joined',data=>{setGameState(data.game_state);setMessage(`${data.username} joined as ${data.player_symbol}. ${data.player_symbol}'s turn!`);});socket.on('move_made',data=>{setGameState(data.game_state);const nextPlayer=data.next_turn===playerSymbol?'Your':`${data.game_state.players[data.next_turn].username}'s`;setMessage(`${nextPlayer} turn, ${data.next_turn===playerSymbol?'asshole':'waitin\\' on that dumb fuck'}!`);// Add shake animation to status message\nconst statusElement=document.querySelector('.game-status');statusElement.classList.add('shake');setTimeout(()=>{statusElement.classList.remove('shake');},500);});socket.on('game_over',data=>{setGameState(data.game_state);setMessage(data.message);setGameOverMessage('Game\\'s over, you chaotic bastards! Thanks for the mess!');setShowGameOver(true);// Hide game over banner after 4 seconds\nsetTimeout(()=>{setShowGameOver(false);},4000);});socket.on('game_reset',data=>{setGameState(data.game_state);setMessage(`Game reset! ${data.game_state.current_turn}'s turn!`);});return()=>{socket.off('connect');socket.off('error');socket.off('room_joined');socket.off('player_joined');socket.off('move_made');socket.off('game_over');socket.off('game_reset');};},[socket,user,playerSymbol,roomCode,navigate]);const handleCellClick=useCallback(index=>{if(!socket||!gameState||!playerSymbol)return;// Check if it's player's turn and cell is empty\nif(gameState.current_turn!==playerSymbol||gameState.board[index]!==null||gameState.status!=='playing'){return;}socket.emit('make_move',{room_code:roomCode,cell_index:index,player_symbol:playerSymbol});},[socket,gameState,playerSymbol,roomCode]);const handleResetGame=useCallback(()=>{if(!socket)return;socket.emit('reset_game',{room_code:roomCode});},[socket,roomCode]);const handleBackToHome=useCallback(()=>{navigate('/home');},[navigate]);// Memoize the board to prevent unnecessary re-renders\nconst renderBoard=useMemo(()=>{if(!gameState)return null;return/*#__PURE__*/_jsx(\"div\",{className:\"game-board\",children:gameState.board.map((cell,index)=>/*#__PURE__*/_jsx(\"div\",{className:`cell ${cell?cell.toLowerCase():''}`,onClick:()=>handleCellClick(index),children:cell},index))});},[gameState,handleCellClick]);if(error){return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:\"Error\"}),/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:handleBackToHome,children:\"Back to Home\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[showGameOver&&/*#__PURE__*/_jsx(\"div\",{className:\"game-over-banner\",children:gameOverMessage}),/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:\"Tic Tac Toe Shitshow\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"room-code\",children:[\"Room: \",roomCode]}),/*#__PURE__*/_jsx(\"div\",{className:`game-status ${message.includes('turn')?'shake':''}`,children:message}),renderBoard,/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'10px',marginTop:'20px'},children:[/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:handleResetGame,disabled:!gameState||gameState.status!=='winner'&&gameState.status!=='tie',children:\"Reset Game\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button purple\",onClick:handleBackToHome,children:\"Back to Home\"})]})]});};export default/*#__PURE__*/React.memo(Game);","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","useParams","useNavigate","io","jsx","_jsx","jsxs","_jsxs","Game","_ref","user","onLogout","roomCode","navigate","socket","setSocket","gameState","setGameState","playerSymbol","setPlayerSymbol","message","setMessage","showGameOver","setShowGameOver","gameOverMessage","setGameOverMessage","error","setError","newSocket","disconnect","on","emit","room_code","data","setTimeout","game_state","player_symbol","status","current_turn","username","nextPlayer","next_turn","players","statusElement","document","querySelector","classList","add","remove","off","handleCellClick","index","board","cell_index","handleResetGame","handleBackToHome","renderBoard","className","children","map","cell","toLowerCase","onClick","includes","style","display","gap","marginTop","disabled","memo"],"sources":["C:/Users/Majid/Downloads/ticktac/client/src/components/Game.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { io } from 'socket.io-client';\r\n\r\nconst Game = ({ user, onLogout }) => {\r\n  const { roomCode } = useParams();\r\n  const navigate = useNavigate();\r\n  \r\n  const [socket, setSocket] = useState(null);\r\n  const [gameState, setGameState] = useState(null);\r\n  const [playerSymbol, setPlayerSymbol] = useState(null);\r\n  const [message, setMessage] = useState(\"Connecting to the chaos...\");\r\n  const [showGameOver, setShowGameOver] = useState(false);\r\n  const [gameOverMessage, setGameOverMessage] = useState('');\r\n  const [error, setError] = useState('');\r\n  \r\n  // Setup socket connection\r\n  useEffect(() => {\r\n    const newSocket = io();\r\n    setSocket(newSocket);\r\n    \r\n    return () => {\r\n      newSocket.disconnect();\r\n    };\r\n  }, []);\r\n  \r\n  // Handle socket events\r\n  useEffect(() => {\r\n    if (!socket || !user) return;\r\n    \r\n    socket.on('connect', () => {\r\n      socket.emit('join_room', { room_code: roomCode });\r\n    });\r\n    \r\n    socket.on('error', (data) => {\r\n      setError(data.message);\r\n      setMessage(\"Error joined the room\");\r\n      \r\n      // Auto navigate back after error\r\n      setTimeout(() => {\r\n        navigate('/home');\r\n      }, 3000);\r\n    });\r\n    \r\n    socket.on('room_joined', (data) => {\r\n      setGameState(data.game_state);\r\n      setPlayerSymbol(data.player_symbol);\r\n      setMessage(`You joined as ${data.player_symbol}. ${data.game_state.status === 'waiting' ? 'Waiting for opponent...' : `${data.game_state.current_turn}'s turn!`}`);\r\n    });\r\n    \r\n    socket.on('player_joined', (data) => {\r\n      setGameState(data.game_state);\r\n      setMessage(`${data.username} joined as ${data.player_symbol}. ${data.player_symbol}'s turn!`);\r\n    });\r\n    \r\n    socket.on('move_made', (data) => {\r\n      setGameState(data.game_state);\r\n      \r\n      const nextPlayer = data.next_turn === playerSymbol ? 'Your' : `${data.game_state.players[data.next_turn].username}'s`;\r\n      setMessage(`${nextPlayer} turn, ${data.next_turn === playerSymbol ? 'asshole' : 'waitin\\' on that dumb fuck'}!`);\r\n      \r\n      // Add shake animation to status message\r\n      const statusElement = document.querySelector('.game-status');\r\n      statusElement.classList.add('shake');\r\n      setTimeout(() => {\r\n        statusElement.classList.remove('shake');\r\n      }, 500);\r\n    });\r\n    \r\n    socket.on('game_over', (data) => {\r\n      setGameState(data.game_state);\r\n      setMessage(data.message);\r\n      setGameOverMessage('Game\\'s over, you chaotic bastards! Thanks for the mess!');\r\n      setShowGameOver(true);\r\n      \r\n      // Hide game over banner after 4 seconds\r\n      setTimeout(() => {\r\n        setShowGameOver(false);\r\n      }, 4000);\r\n    });\r\n    \r\n    socket.on('game_reset', (data) => {\r\n      setGameState(data.game_state);\r\n      setMessage(`Game reset! ${data.game_state.current_turn}'s turn!`);\r\n    });\r\n    \r\n    return () => {\r\n      socket.off('connect');\r\n      socket.off('error');\r\n      socket.off('room_joined');\r\n      socket.off('player_joined');\r\n      socket.off('move_made');\r\n      socket.off('game_over');\r\n      socket.off('game_reset');\r\n    };\r\n  }, [socket, user, playerSymbol, roomCode, navigate]);\r\n  \r\n  const handleCellClick = useCallback((index) => {\r\n    if (!socket || !gameState || !playerSymbol) return;\r\n    \r\n    // Check if it's player's turn and cell is empty\r\n    if (gameState.current_turn !== playerSymbol || gameState.board[index] !== null || gameState.status !== 'playing') {\r\n      return;\r\n    }\r\n    \r\n    socket.emit('make_move', {\r\n      room_code: roomCode,\r\n      cell_index: index,\r\n      player_symbol: playerSymbol\r\n    });\r\n  }, [socket, gameState, playerSymbol, roomCode]);\r\n  \r\n  const handleResetGame = useCallback(() => {\r\n    if (!socket) return;\r\n    \r\n    socket.emit('reset_game', { room_code: roomCode });\r\n  }, [socket, roomCode]);\r\n  \r\n  const handleBackToHome = useCallback(() => {\r\n    navigate('/home');\r\n  }, [navigate]);\r\n  \r\n  // Memoize the board to prevent unnecessary re-renders\r\n  const renderBoard = useMemo(() => {\r\n    if (!gameState) return null;\r\n    \r\n    return (\r\n      <div className=\"game-board\">\r\n        {gameState.board.map((cell, index) => (\r\n          <div \r\n            key={index}\r\n            className={`cell ${cell ? cell.toLowerCase() : ''}`}\r\n            onClick={() => handleCellClick(index)}\r\n          >\r\n            {cell}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }, [gameState, handleCellClick]);\r\n  \r\n  if (error) {\r\n    return (\r\n      <div className=\"container\">\r\n        <h1 className=\"title\">Error</h1>\r\n        <div className=\"error-message\">{error}</div>\r\n        <button className=\"button\" onClick={handleBackToHome}>\r\n          Back to Home\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      {showGameOver && (\r\n        <div className=\"game-over-banner\">\r\n          {gameOverMessage}\r\n        </div>\r\n      )}\r\n      \r\n      <h1 className=\"title\">Tic Tac Toe Shitshow</h1>\r\n      \r\n      <div className=\"room-code\">\r\n        Room: {roomCode}\r\n      </div>\r\n      \r\n      <div className={`game-status ${message.includes('turn') ? 'shake' : ''}`}>\r\n        {message}\r\n      </div>\r\n      \r\n      {renderBoard}\r\n      \r\n      <div style={{ display: 'flex', gap: '10px', marginTop: '20px' }}>\r\n        <button \r\n          className=\"button\" \r\n          onClick={handleResetGame}\r\n          disabled={!gameState || (gameState.status !== 'winner' && gameState.status !== 'tie')}\r\n        >\r\n          Reset Game\r\n        </button>\r\n        \r\n        <button className=\"button purple\" onClick={handleBackToHome}>\r\n          Back to Home\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Game); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}